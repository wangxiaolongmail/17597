<!DOCTYPE html>
<html>
<head>
    <title></title>
    <style>
		.icon{
			background-image:url(server.png);
			width:45px;
			height:45px;
		}
		.icon1{
			background-image:url(et.png);
			width:45px;
			height:45px;
		}
		.icon2{
			background-image:url(deploy.png);
			width:45px;
			height:45px;
		}
		.icon3{
			background-image:url(connect.png);
			width:45px;
			height:45px;
		}
		.icon4{
			background-image:url(vsp.png);
			width:45px;
			height:45px;
		}
		.icon5{
			background-image:url(add.png);
			width:20px;
			height:20px;
		}
		.disable_text_highlighting {
			-webkit-touch-callout: none;
			-webkit-user-select: none; /* Webkit */
			-moz-user-select: none;    /* Firefox */
			-ms-user-select: none;     /* IE 10  */
			/* Currently not supported in Opera but will be soon */
			-o-user-select: none;
			user-select: none;
		}
    </style>
<script>
	var _svg_d=null;
	var _wc=8;
	var _d=document;
	var data={
		lstyle:"fill:white;stroke:#ddd;stroke-width:3",
		bg:"#eee",
		border:"2px solid #ddd",
		borderRadius: "5px",
		borderWidth: 2,
		adjustWidth: 6,
		lmode:2,
		zIndex:1,
		w:120,
		h:60,
		iconWidth:50,
		buttonHight:30,
		buttonWidth:100,
		buttonPadding:2,
		containerWidth:180,
		containerHeight:500,
		containerPaddingX:10,
		containerPaddingY:10,
		containerPad:10,
		containerList:[
			{title:"Virtual Application Component:"},
			{title:"Rules / Policies:"},
			{title:"Actions:"},
			{title:"Virtual System Patterns:"}
		],
		isFix:true,
		isAjustAutoX:true,
		isAjustAutoY:true,
		typelist:[
			{
				isOnlyIcon:false,
				iconClass:"icon"
			},
			{
				isOnlyIcon:false,
				iconClass:"icon1"
			},
			{
				isOnlyIcon:false,
				iconClass:"icon2"
			},
			{
				isOnlyIcon:false,
				iconClass:"icon3"
			},
			{
				isOnlyIcon:false,
				iconClass:"icon4"
			},
			{
				isOnlyIcon:true,
				iconClass:"icon5"
			}
		],
		list:[
		{
			typeid:0,
			title:"Web Application",
			x:20,
			y:100,
			to:[
				{id:1,title:"a1"}
				],
			houseid:0
			},
		{
			typeid:1,
			title:"Environment Target",
			x:200,
			y:100,
			isBranch:true,
			to:[
				{id:2,title:"Development"},
				{id:3,title:"India QA team"},
				{id:4,title:"Production"}
				],
			houseid:1
			},
		{
			typeid:2,
			title:"Deploy",
			x:500,
			y:70,
			to:[
				{id:5,title:"b1"}
				],
			houseid:2
			},
		{
			typeid:2,
			title:"Deploy",
			x:500,
			y:180,
			to:[
				{id:6,title:"b1"}
				],
			houseid:2
			},
		{
			typeid:3,
			title:"Connect",
			x:500,
			y:280,
			to:[
				{id:7,title:"b1"}
				],
			houseid:2
			},
		{
			typeid:4,
			title:"Joe's Dev Env",
			x:680,
			y:70,
			houseid:3
			},
		{
			typeid:4,
			title:"WAS QA V1.2",
			x:680,
			y:180,
			houseid:3
			},
		{
			typeid:4,
			title:"Production WAS Environment",
			x:680,
			y:280,
			houseid:3
			},
		{
			typeid:5,
			title:"",
			x:780,
			y:380,
			w:20,
			h:20,
			houseid:1
			}
		]
	};
	function _get_class(object) {
		return Object.prototype.toString.call(object).match(/^\[object\s(.*)\]$/)[1];
	}
	function _is_number(val) {
		return _get_class(val) === 'Number';
	}
	function _is_array(val) {
		return _get_class(val) === 'Array';
	}
	function _each(a,f){
		if(_is_array(a)){
			for(var i=0;i<a.length;i++) f(a[i],i);
		}
	}
	function _drag(o){
		var oh=o.n||o.oh;
		oh.onmousedown=function(e){
			var x=e.layerX,y=e.layerY;
			oh.setCapture();
			_d.onmousemove=function(e){
				draw(o,e.pageX-x,e.pageY-y);
			};
			_d.onmouseup=function(){
				oh.releaseCapture();
				_d.onmousemove=_d.onmouseup=null;
			};
		};
	}
	function addBody(node){
		var pn=_d.getElementById("my");
		pn.appendChild(node);
	}
	function _drawContainer(o){
		o.n=_d.createElement("div");
		var sty=o.n.style;
		sty.position = "absolute";
		sty.left = o.x+"px";
		sty.top = o.y+"px";
		sty.width = o.w+"px";
		sty.height = o.h+"px";
		sty.zIndex = -1;
		sty.background = "#FEF5ED";
		sty.border = "2px solid #FDEADA";
		o.x2=o.x+o.w;
		o.y2=o.y+o.h;
		o.n.innerHTML=o.title;
		addBody(o.n);
	}
	function _drawElement(o){
		if(!o.n){
			var typeObj=data.typelist[o.typeid];
			o.n=_d.createElement("div");
			if(typeObj.isOnlyIcon){
				var left=_d.createElement("div");
				left.className=typeObj.iconClass;
				o.n.appendChild(left);
			}else{
				var wrap=_d.createElement("div");
				o.n.appendChild(wrap);
				o.wrap=wrap;
				var wrapButton=_d.createElement("div");
				o.n.appendChild(wrapButton);
				o.wrapButton=wrapButton;
				wrapButton.align="right";
				var layout=_d.createElement("div");
				layout.className="layout";
				wrap.appendChild(layout);
					var left=_d.createElement("div");
					left.style="float:left;";
					left.className=typeObj.iconClass;
					layout.appendChild(left);
					var right=_d.createElement("div");
					right.style="padding-left:"+data.iconWidth+"px";
					layout.appendChild(right);
					right.innerHTML=o.title;
					right.className="disable_text_highlighting";
				var sty=o.wrap.style;
				sty.width = o.w+"px";
				sty.height = o.h+"px";
				sty.background = o.bg;
				sty.border = o.border;
				sty.borderRadius = o.borderRadius;
				if(o.isBranch){
					_each(o.to,function(item){
						var n=_d.createElement("div");
						var sty=n.style;
						sty.width = data.buttonWidth+"px";
						sty.height = data.buttonHight+"px";
						sty.background = o.bg;
						sty.border = o.border;
						sty.borderRadius = o.borderRadius;
						sty.marginTop=data.buttonPadding+"px";
						n.innerHTML=item.title;
						o.wrapButton.appendChild(n);
						item.n=n;
					});
				}
			}
			addBody(o.n);
		}
		var sty=o.n.style;
		sty.position = "absolute";
		sty.left = o.x+"px";
		sty.top = o.y+"px";
		sty.zIndex = o.zIndex;
		_each(o.to,function(item){
			if(!item.nline){
				var group=_svg_d.getElementById("group");
				var node=_svg_d.createElementNS("http://www.w3.org/2000/svg","path");
				item.nline=node;
				group.appendChild(node);
			}
		});
	}
	function _adjust(flag,isEnd){
		return isEnd?flag*data.adjustWidth:0;
	}
	function _getLMPoint(o,flag,isEnd,i){
		var x=o.x+o.w-_wc+_adjust(flag,isEnd)+2*data.borderWidth;
		var y=o.y+o.h/2-_wc;
		return {x:x,y:y};
	}
	function _getRMPoint(o,flag,isEnd,i){
		var x=o.x-_wc+_adjust(flag,isEnd);
		var y=o.y+o.h/2-_wc;
		return {x:x,y:y};
	}
	function _getTMPoint(o,flag,isEnd,i){
		var y=o.y-_wc;
		var x=o.x+o.w/2-_wc+_adjust(flag,isEnd);
		return {x:x,y:y};
	}
	function _getButtonHeight(o){
		if(o.isBranch){
			var len=o.to.length;
			var y=len*(data.buttonHight+data.buttonPadding+2*data.borderWidth);
			return y;
		}else{
			return 0;
		}
	}
	function _getBMPoint(o,flag,isEnd,i){
		var y=o.y+o.h-_wc+_adjust(flag,isEnd);
		var x=o.x+o.w/2-_wc;
		y=y+_getButtonHeight(o);
		return {x:x,y:y};
	}
	function _getLBPoint(o,flag,isEnd,i){
		var x=o.x+o.w-_wc+_adjust(flag,isEnd);
		var y=o.y+o.h-_wc+i*data.buttonHight+(i+1)*data.buttonPadding+(i+1)*2*data.borderWidth+data.buttonHight/2;
		return {x:x,y:y};
	}
	function _getRBPoint(o,flag,isEnd,i){
		var x=o.x-_wc+data.w-data.buttonWidth+_adjust(flag,isEnd);
		var y=o.y+o.h-_wc+i*data.buttonHight+(i+1)*data.buttonPadding+(i+1)*2*data.borderWidth+data.buttonHight/2;
		return {x:x,y:y};
	}
	function drawLine(){
		_each(data.list,function(obj){
			_each(obj.to,function(item,i){
				var s="";
				var oo1=obj;oo2=data.list[item.id];
				if(oo2.isHidden) return;
				if(obj.isBranch){
					if(oo1.x>(oo2.x+oo2.w)){
						var flag=1;
						var o1=_getRBPoint(oo1,flag,false,i);
						var o2=_getLMPoint(oo2,flag,true,i);
					}else if(oo1.x>oo2.x){
					}else{
						var flag=1;
						var o1=_getLBPoint(oo1,flag,false,i);
						var o2=_getRMPoint(oo2,flag,true,i);
					}
				}else{
					if(oo1.x>(oo2.x+oo2.w)){
						var flag=1;
						var o1=_getRMPoint(oo1,flag,false,i);
						var o2=_getLMPoint(oo2,flag,true,i);
					}else if(oo1.x>oo2.x){
						if(oo1.y>oo2.y){
							var flag=1;
							var o1=_getTMPoint(oo1,flag,false,i);
							var o2=_getBMPoint(oo2,flag,true,i);
						}else{
							var flag=1;
							var o1=_getBMPoint(oo1,flag,false,i);
							var o2=_getTMPoint(oo2,flag,true,i);
						}
					}else{
						var flag=-1;
						var o1=_getLMPoint(oo1,flag,false,i);
						var o2=_getRMPoint(oo2,flag,true,i);
					}
				}
				s=s+"M "+o1.x+","+o1.y+" ";
				var x=(o2.x-o1.x)/2+o1.x;
				s=s+"Q "+x+","+o1.y+" ";
				var y=(o2.y-o1.y)/2+o1.y;
				s=s+" "+x+","+y+" ";
				s=s+"T "+(o2.x)+","+o2.y+" ";
				svg_drawLine(obj,s,i);
			});
		});
	}
	function _adjustPos(o,x,y){
		if(data.isFix&&_is_number(o.houseid)){
			var house=data.containerList[o.houseid];
			var nx=x>house.x?x:house.x;
			var ny=y>house.y?y:house.y;
			var nx=(nx+o.w)<house.x2?nx:(house.x2-o.w);
			var h=o.h+_getButtonHeight(o);
			var ny=(ny+h)<house.y2?ny:(house.y2-h);
			o.x=nx; o.y=ny;
		}else{
			o.x=x; o.y=y;
		}
	}
	function _adjustAutoX(o){
		if(data.isAjustAutoX&&_is_number(o.houseid)){
			var house=data.containerList[o.houseid];
			var x=(house.w)/2-(o.w)/2;
			o.x=house.x+x;
		}
	}
	function draw(o,x,y){
		_each(data.list,function(obj){
			if(o==obj){
				_adjustPos(o,x,y);
				_drawElement(obj);
			}
		});
		drawLine();
	}
	function main(){
		var x=data.containerPaddingX;
		var y=data.containerPaddingY;
		var pad=data.containerPad;
		_each(data.containerList,function(o){
			o.w=o.w||data.containerWidth;
			o.h=o.h||data.containerHeight;
			o.y=y;
			o.x=x;
			x=x+o.w+pad;
			_drawContainer(o);
		})
		_each(data.list,function(o){
			if(o.isHidden) return;
			o.bg=o.bg||data.bg;
			o.lmode=o.lmode||data.lmode;
			o.zIndex=o.zIndex||data.zIndex;
			o.w=o.w||data.w;
			o.h=o.h||data.h;
			o.border=o.border||data.border;
			o.borderRadius=o.borderRadius||data.borderRadius;
			if(o.to&&!o.lstyle) o.lstyle=data.lstyle;
			_adjustPos(o,o.x,o.y);
			_adjustAutoX(o);
			_drawElement(o);
			_drag(o);
		})
		drawLine();
	}
	function svg_init(evt)
	{
		_svg_d=evt.target.ownerDocument;
		main();
	}
	function svg_drawLine(o,s1,i)
	{
		var node = o.to[i].nline;
		node.setAttribute("style",o.lstyle);
		node.setAttribute("marker-end","url(#idArrow)");
		node.setAttribute("d",s1);
	}
</script>
</head>
<body>
<div id="my"></div>
<svg width='640' height='480' onload='svg_init(evt)'>
<defs>
	<marker id="idArrow" viewBox="0 0 20 20" refX="0" refY="10" markerUnits="strokeWidth" markerWidth="3" markerHeight="10" orient="auto">
         <path d="M 0 0 L 20 10 L 0 20 z" fill="#AAA" stroke="#ddd"/>
    </marker>
</defs>
<g id='group'></g>
</svg>
</body>
</html>
{ domain: null,
  _events: null,
  _maxListeners: 10,
  socket: 
   { domain: null,
     _events: 
      { drain: "[Function: ondrain]",
        timeout: "[Object]",
        error: "fun",
        close: "[Object]" },
     _maxListeners: 10,
     _handle: 
      { writeQueueSize: 0,
        owner: "Circular",
        onread: "[Function: onread]" },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 59,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { domain: null,
        _events: "[Object]",
        _maxListeners: 10,
        _connections: 1,
        connections: "[Getter/Setter]",
        allowHalfOpen: true,
        _handle: "[Object]",
        httpAllowHalfOpen: false,
        _connectionKey: '4:0.0.0.0:80' },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: "Circular",
        _idlePrev: "Circular",
        ontimeout: "fun" },
     _idlePrev: 
      { _idleNext: "Circular",
        _idlePrev: "Circular",
        ontimeout: "fun" },
     _idleStart: "Wed Jan 23 2013 16:30:23 GMT+0800 (CST)",
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: "[Function: parserOnHeaders]",
        onHeadersComplete: "[Function: parserOnHeadersComplete]",
        onBody: "[Function: parserOnBody]",
        onMessageComplete: "[Function: parserOnMessageComplete]",
        socket: "Circular",
        incoming: "Circular",
        maxHeaderPairs: 2000,
        onIncoming: "fun" },
     ondata: "fun",
     onend: "fun",
     _httpMessage: 
      { domain: null,
        _events: "[Object]",
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: "Circular",
        connection: "Circular" } },
  connection: 
   { domain: null,
     _events: 
      { drain: "[Function: ondrain]",
        timeout: "[Object]",
        error: "fun",
        close: "[Object]" },
     _maxListeners: 10,
     _handle: 
      { writeQueueSize: 0,
        owner: "Circular",
        onread: "[Function: onread]" },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 59,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { domain: null,
        _events: "[Object]",
        _maxListeners: 10,
        _connections: 1,
        connections: "[Getter/Setter]",
        allowHalfOpen: true,
        _handle: "[Object]",
        httpAllowHalfOpen: false,
        _connectionKey: '4:0.0.0.0:80' },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: "Circular",
        _idlePrev: "Circular",
        ontimeout: "fun" },
     _idlePrev: 
      { _idleNext: "Circular",
        _idlePrev: "Circular",
        ontimeout: "fun" },
     _idleStart: "Wed Jan 23 2013 16:30:23 GMT+0800 (CST)",
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: "[Function: parserOnHeaders]",
        onHeadersComplete: "[Function: parserOnHeadersComplete]",
        onBody: "[Function: parserOnBody]",
        onMessageComplete: "[Function: parserOnMessageComplete]",
        socket: "Circular",
        incoming: "Circular",
        maxHeaderPairs: 2000,
        onIncoming: "fun" },
     ondata: "fun",
     onend: "fun",
     _httpMessage: 
      { domain: null,
        _events: "[Object]",
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: "Circular",
        connection: "Circular" } },
  httpVersion: '1.1',
  complete: false,
  headers: { host: '127.0.0.1', connection: 'keep-alive' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/',
  method: 'GET',
  statusCode: null,
  client: 
   { domain: null,
     _events: 
      { drain: "[Function: ondrain]",
        timeout: "[Object]",
        error: "fun",
        close: "[Object]" },
     _maxListeners: 10,
     _handle: 
      { writeQueueSize: 0,
        owner: "Circular",
        onread: "[Function: onread]" },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 59,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { domain: null,
        _events: "[Object]",
        _maxListeners: 10,
        _connections: 1,
        connections: "[Getter/Setter]",
        allowHalfOpen: true,
        _handle: "[Object]",
        httpAllowHalfOpen: false,
        _connectionKey: '4:0.0.0.0:80' },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: "Circular",
        _idlePrev: "Circular",
        ontimeout: "fun" },
     _idlePrev: 
      { _idleNext: "Circular",
        _idlePrev: "Circular",
        ontimeout: "fun" },
     _idleStart: "Wed Jan 23 2013 16:30:23 GMT+0800 (CST)",
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: "[Function: parserOnHeaders]",
        onHeadersComplete: "[Function: parserOnHeadersComplete]",
        onBody: "[Function: parserOnBody]",
        onMessageComplete: "[Function: parserOnMessageComplete]",
        socket: "Circular",
        incoming: "Circular",
        maxHeaderPairs: 2000,
        onIncoming: "fun" },
     ondata: "fun",
     onend: "fun",
     _httpMessage: 
      { domain: null,
        _events: "[Object]",
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: "Circular",
        connection: "Circular" } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }